ORG 0x7c00
BITS 16

CODE_SEG equ gdt_code - gdt_start
DATA_SEG equ gdt_data - gdt_start

_start:
    jmp short start
    nop

times 33 db 0

start:
    jmp 0:start2

; esse código é preventivo, pois há algumas bios que podem corromper o boot loader se não fizer isso

start2:
    cli ; Clear Interrupts
    mov ax, 0x00
    mov ds, ax
    mov es, ax
    mov ss, ax
    mov sp, 0x7c00
    sti ; Enables Interrupts

.load_protected:
    cli
    lgdt[gdt_descriptor]
    mov eax, cr0
    or eax, 0x1
    mov cr0, eax
    jmp CODE_SEG:load32

; GDT
gdt_start:
gdt_null:
    dd 0x0
    dd 0x0

; offset 0x8
gdt_code:       ; CS 
    dw 0xffff   ; limite do segmento dos primeiros 15 bits
    dw 0        ; 15 bits base
    dw 0        ; 16/23 bits base
    db 0x9a     ; byte acessivel
    db 11001111b ; 4 bits altos e 4 bits baxos | flags
    db 0        ; 24/31 bits base

; offset 0x10
gdt_data:       ; DS, SS, ES, FS, GS
    dw 0xffff   ; limite do segmento dos primeiros 15 bits
    dw 0        ; 15 bits base
    dw 0        ; 16/23 bits base
    db 0x92     ; byte acessivel
    db 11001111b ; 4 bits altos e 4 bits baxos | flags
    db 0        ; 24/31 bits base

gdt_end:

gdt_descriptor:
    dw gdt_end - gdt_start-1
    dd gdt_start

[BITS 32]
load32:
    jmp $

times 510-($ - $$) db 0
dw 0xAA55

